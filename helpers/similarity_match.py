from republic.fuzzy.fuzzy_keyword_searcher import score_levenshtein_distance, pairs, confuse_distance


pairs = {('s', 'f'): 0.2,
 ('s', ''): 0.2,
 ('c', 'k'): 0.5,
 ('j', 'i'): 0.5,
 ('r', 'i'): 0.5,
 ('r', 't'): 0.5,
 ('r', 'n'): 0.5,
 ('e', 'c'): 0.5,
 ('a', 'e'): 0.2,
 ('a', 'c'): 0.5,
 ('o', 'c'): 0.5,
 ('y', 'i'): 0.5,
 ('l', 'i'): 0.5,
 ('C', 'K'): 0.5,
 ('I', 'l'): 0.5,
 ('J', 'T'): 0.5,
 ('P', 'F'): 0.5,
 ('P', 'T'): 0.5,
 ('T', 'F'): 0.5,
 ('I', 'L'): 0.5,
 ('B', '8'): 0.5,
 ('a', 'A'): 0.1,
 ('b', 'B'): 0.1,
 ('c', 'C'): 0.1,
 ('d', 'D'): 0.1,
 ('e', 'E'): 0.1,
 ('f', 'F'): 0.1,
 ('g', 'G'): 0.1,
 ('h', 'H'): 0.1,
 ('i', 'I'): 0.1,
 ('j', 'J'): 0.1,
 ('k', 'K'): 0.1,
 ('l', 'L'): 0.1,
 ('m', 'M'): 0.1,
 ('n', 'N'): 0.1,
 ('o', 'O'): 0.1,
 ('p', 'P'): 0.1,
 ('q', 'Q'): 0.1,
 ('r', 'R'): 0.1,
 ('s', 'S'): 0.1,
 ('t', 'T'): 0.1,
 ('u', 'U'): 0.1,
 ('v', 'V'): 0.1,
 ('w', 'W'): 0.1,
 ('x', 'X'): 0.1,
 ('y', 'Y'): 0.1,
 ('z', 'Z'): 0.1,
 ('e', 'é'): 0.1,
 ('e', 'ë'): 0.1,
 ('e', 'è'): 0.1,
 ('a', 'ä'): 0.1,
 ('a', 'á'): 0.1,
 ('a', 'à'): 0.1,
 ('i', 'ï'): 0.1,
 ('i', 'í'): 0.1,
 ('i', 'ì'): 0.1,
 ('o', 'ó'): 0.1,
 ('o', 'ö'): 0.1,
 ('o', 'ò'): 0.1,
 ('u', 'ú'): 0.1,
 ('u', 'ü'): 0.1,
 ('u', 'ù'): 0.1}


def score_levenshtein_distance_ratio(term1, term2):
   max_distance = max(len(term1), len(term2))
   distance = score_levenshtein_distance(term1, term2, use_confuse=True)
   return 1 - distance / max_distance